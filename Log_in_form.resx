<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>